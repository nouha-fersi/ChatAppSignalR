@page "/Account/Register"

<h3>Register</h3>

<div class="row">
    <div class="col-md-4">
        @(Message != "" ? Message : "")
        <EditForm Model="registerModel" OnValidSubmit="RegisterAsync" FormName="register">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <!-- Full Name Input -->
            <div class="form-floating mb-3">
                <InputText id="fullName" @bind-Value="registerModel.FullName" class="form-control" placeholder="Full Name" />
                <label for="fullName" class="form-label">Full Name</label>
                <ValidationMessage For="@(() => registerModel.FullName)" class="text-danger" />
            </div>

            <!-- Email Input -->
            <div class="form-floating mb-3">
                <InputText id="email" @bind-Value="registerModel.Email" class="form-control" placeholder="Email" />
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="@(() => registerModel.Email)" class="text-danger" />
            </div>

            <!-- Password Input -->
            <div class="form-floating mb-3">
                <InputText id="password" type="password" @bind-Value="registerModel.Password" class="form-control" placeholder="Password" />
                <label for="password" class="form-label">Password</label>
                <ValidationMessage For="@(() => registerModel.Password)" class="text-danger" />
            </div>

            <!-- Confirm Password Input -->
            <div class="form-floating mb-3">
                <InputText id="confirmPassword" type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" class="text-danger" />
            </div>

            <!-- Submit Button -->
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </EditForm>

    </div>
</div>






@code {
	string Message = "";
	[SupplyParameterFromForm]
	RegisterModel registerModel { get; set; } = new();

	async Task RegisterAsync()
	{
		var appUser = new AppUser()
			{
				Fullname = registerModel.FullName,
				Email = registerModel.Email,
				PasswordHash= registerModel.Password,
				UserName= registerModel.Email
			};
		var result = await userManager.CreateAsync(appUser, registerModel.Password);
		if (!result.Succeeded)
		{
            Message = string.Join("; ", result.Errors.Select(e => e.Description));
			return;
		}
        NavManager.NavigateTo("/Account/Login");
	}

	public class RegisterModel
	{
		[Required]
		public string FullName { get; set; } = string.Empty;
		[Required, EmailAddress]
		public string Email { get; set; } = string.Empty;
		[Required]
		public string Password { get; set; } = string.Empty;
		[Compare(nameof(Password)), Required]
		public string ConfirmPassword { get; set; } = string.Empty;
	}

}
